==========================================
Функциональные требования к Системе Analog
==========================================

1. Общее описание
-----------------

1.1. описание процесса «как есть сейчас»
----------------------------------------

Возникает регулярная потребность переводить спецификации, выполненные на продукции  одного производителя на спецификации других производителей. Спецификация представляет из себя перечень позиций по порядку, с артикулами, описанием, кол-вом и ед.изм. – для каждой позиции. По бумажному каталогу, либо по интернету осуществляется поиск позиций-аналогов и в табличную форму эксель вносится артикул-аналог другого производителя. «Выходная» спецификация состоит из перечня артикулов, количества товара (при необходимости скорректированного). Как правило, в «выходной» спецификации используются артикулы только одного производителя. Процесс долгий, однообразный и регулярно повторяющийся.

1.2. какой результат нужен
--------------------------

Хотелось бы сформировать единую базу данных артикулов разных производителей. В специальной форме - из таблицы или .pdf загружать исходную спецификацию (на первое время можно ввести допустимые упрощения – в одной спецификации могут находиться позиции только одного производителя, в спецификации четко определен порядок столбцов с данными). В некоторой форме задавать условия поиска/подбора  артикулов-аналогов. В качестве результата необходимо получить эксель (или pdf) таблицу с перечнем позиций-аналогов и с уточненным количеством. 

Пока рассматриваются категории – кабельные лотки, шинопроводные системы.

1.3. требования к ПО и разработчику
-----------------------------------

- Не пиратское, не триал версия – MS SQL, либо My SQL. Проектом должны быть определены языки и среды программирования.
- Код должен быть разделен на фронт-энд и бэк-энд – для оптимизации запросов и поиска при масштабировании проекта. Определить структуру проекта: двухзвенную либо трехзвенную
- Доступ пользователя к ПО должен осуществляться через браузер. Требования к браузеру (ограничения по типам и версиям) определить в проекте.
- Код должен соответствовать общепринятым нормам, быть понятным для прочтения, понимания и редактирования другим специалистам.
- После оплаты работы ВСЕ результаты работы полностью переходят заказчику, являются его собственностью, не подлежать разглашению и передаче Исполнителем третьим лицам.
- Результат работы – развернутая БД с рабочим процессом. 
- Гарантийный период – 1 мес.
- Более подробно требования к этапам разработки указаны в док-те – ЭТАПЫ и СРОКИ

2. Описание отдельных процедур и частей алгоритма
-------------------------------------------------

2.1. первоначальная Загрузка и обновление БД
--------------------------------------------

БД – это крайне ценный актив проекта. Все манипуляции с ней должны производиться с особенной аккуратностью и контролем.
В меню программы должен быть раздел Администрирование БД. Доступ в раздел – только для определенного круга пользователей - по паролю.

В разделе Администрирование меню, подпункты – загрузка данных, выгрузка данных. 
Загрузка данных.  Выбрать файл, загрузить данные. Форму файла данных разработать. Форму окна загрузки разработать.  Наполнение производится путем загрузки данных из экселя. При загрузке данных должна проводиться проверка на предмет корректности данных, задвоения с уже внесенными в БД данными. Наполнение производится только авторизованным лицом с фиксацией его действий. 

Входные данные представлены в виде таблицы в формате эксель или пдф. В обязательном порядке в таблице присутствуют следующие столбцы – артикул производителя, количество товара. Помимо этих столбцов, обычно, есть и другие столбцы (ед.измерения, описание, наименование производителя и др). Для упрощения загрузки на первом этапе можно принять, что таблица загружается в форме эксель, в которой в первом столбце находятся артикулы одного указанного при загрузке производителя, во втором столбце – количество товара, в третьем – ед.изм. На последующих этапах желательно иметь функцию распознавания – какая информация в каком столбце находится. В форме, помимо выбора исходного файла данных, необходимо предусмотреть выбор наименования производителя исходных данных.

Вопрос с удалением данных? Видимо, этого не должно быть. Однако, вероятно, ряд позиций будет устаревать и его необходимо будет подменять новым. Необходимо решить вопрос с поддержанием актуальности данных. Так, например, производитель изменил артикулы. Как поступать в этом случае – менять существующие артикулы или вносить новые позиции? Если вносить новые позиции, то актуальность или «статус» старых надо понизить, либо ставить «флаг» - неактивно.

Также необходимо решить вопрос с возможностью масштабирования БД и расширения функционала – внесение новых полей.  Внесение новых полей потребует создания возможности их автоматического заполнения для уже имеющихся в БД позиций.
Выгрузка данных. Должна быть предусмотрена возможность выгрузки позиций из БД в эксель с выбором варианта формата (выбрать необходимые поля, выбрать признаки позиций для вывода). Разработать выгрузку, разработать окно выбора формата выгрузки.
Должен проводится регулярный бэкап БД.

Перспективная задача – интеллектуальный поиск и обновление БД из интернета. 

2.2. структура данных
---------------------

Каждая запись в системе уникальна, имеет уникальный внутренний номер. Каждая запись – это товар с определенным набором свойств - атрибутов. Каждая позиция занимает место в структуре данных, с учетом принадлежности классу, виду, производителю.

**Таблицы** – набор производителей, набор классов, набор видов внутри каждого класса, типы атрибутов, набор наименований атрибутов для каждого класса

**Класс** – крупная товарная категория, обладающая идентичными свойствами. Внутри класса атрибуты имеют одинаковые названия и свойства.  Внутри одного класса могут быть товары для которых не задействованы все атрибуты одновременно. Пример – для класса – кабеленесущие системы (КНС) есть жесткий атрибут – «вид», но для товара «крышка прямой секции» этот атрибут неактуален. 

**Вид (подкласс)** – подгруппа товаров внутри каждого класса, для более удобного поиска и классификации. Внутри одного вида каждого класса задействованы одинаковые атрибуты для всех позиций.

**Артикул**. У каждой позиции внутри одного производителя есть уникальный артикул. Артикулы разных производителей, теоретически могут иметь повторения.

**Производитель**. Есть список производителей. Каждая позиция (запись) принадлежит какому-либо  производителю и только одному.

Атрибуты разделены на типы - *Жесткий*, *Мягкий*, *Пересчет*, *Взаимосвязь*, *Цена*

При поиске первоочередность атрибута имеет значение. Пример – атрибут B1 приоритетнее атрибута B2.

**Жесткий атрибут**, группа А – как правило, такой тип жестко определяет подгруппу или свойство товаров, к которой должен относиться подбираемый аналог. Такой параметр жестко определяет важные свойства товара.

По умолчанию все жесткие атрибуты подбираемого аналога должны в точности соответствовать жестким атрибутам исходной позиции

Пример алгоритма: «продукт - кабельный лоток прямая секция, покрытие – холодный цинк, ширина – 500». Все перечисленные атрибуты должны в точности совпадать с подбираемым аналогом.

**Мягкий Атрибут**, группа B  – как правило, такой тип имеет незначительную вариативность конкретного свойства товара у разных производителей. Как правило, отличия этих свойства не являются определяющими и критическими, однако требуют уточнения для нахождения аналога в процессе поиска. Также такой тип параметра требует уточнения принципа поиска, который задается при формировании запроса на подбор аналогов.  

Пример алгоритма подбора - Мягкий атрибут для продукта каб.лоток прямая секция – «толщина – 0,8мм, высота борта – 50мм». При наличии нескольких вариантов выбора (т.е. все жесткие атрибуты совпадают), необходимо осуществлять подбор с учетом расширенных – мягких атрибутов. 

По умолчанию – подбирается позиция с наиболее арифметически близким значением. 

По умолчанию – приоритет подбора атрибутов – по порядку. Т.е. первоочередность атрибута имеет значение. Пример – атрибут B1 приоритетнее атрибута B2.

При условии указаний пользовательских критериев поиска  - критерии задаются в форме запроса. Примеры критериев подбора для параметра «толщина»: не более, чем … мм, выбрать минимальный из имеющихся, выбрать максимальный из имеющихся, выбрать наиболее близкий к исходному.

**Атрибут Пересчет**, группа C – подобранный элемент-аналог может совпадать по всем заданным параметрам, однако иметь другой размер. Например, длина исходной секции – 3000мм, а длина подобранного и полностью подходящего по всем параметрам аналога составляет 2000мм. В этом случае, необходимо соответствующим образом, пересчитать количество товара в «выходной» спецификации.

Пример алгоритм подбора параметра Пересчет - в исходной спецификации количество может быть задано как в штуках, так и в метрах. Если задано в метрах – пересчитывать не нужно. Если задано в штуках, то необходимо 1. уточнить – есть ли разница в длине кабельных лотков – исходного и подбираемого  2. Если разница есть, то перевести исходное кол-во в метры, а затем метры поделить на длину подбираемого лотка, округлить в большую сторону.

**Атрибут Взаимосвязь** – определяет наличие взаимосвязей между элементами. Так, например, для крепления крышки у одного производителя не требуется доп.элементов, а у другого необходимы клипсы. (см.пример)

**Атрибут Цена** – без комментариев

2.3. какие значения могут быть у атрибута:
------------------------------------------

Числовое значение – поиск позиций с таким типом атрибутов осуществляется по математическим принципам. Перечень таких мат.функций должен быть точно определен (минимум, максимум, среднее арифметическое, наиболее близкое арифметически и тд). В перспективе он может расширяться.

Текстовое значение – внутри каждого класса перечень возможных текстовых значений каждого атрибута четко определен. Это должна описывать отдельная табл. Поиск соответствий по таким атрибутам производится по точному соответствию.

В перспективе возможно расширение как типов Атрибутов, так и количества атрибутов внутри одного типа. Пример – Появление группы атрибутов – Крепление. Такой атрибут будет определять набор элементов крепления указанной позиции для каждого типа крепления. Например, для крепления прямой секции есть варианты – к потолку на шпильках, к стене на консолях и пр.

2.4. загрзка спецификации
--------------------------

Выбор пункта меню – загрузить спецификацию. Открывается окно с выбором файла для загрузки. После нажатия ОК, появляется форма, в которой необходимо выбрать производителя, на котором сделана загружаемая спецификация. Производитель выбирается из выпадающего списка. Подтверждается нажатием ОК.

2.5. форма запроса
------------------

После загрузки спецификации и выбора производителя, появляется окно с формой запроса параметров подбора спецификации-аналога.

Форма состоит из трех частей.

Первая часть. «автоматический подбор». Из выпадающего списка выбирается производитель, на котором будет сделана исходящая спецификация.  Внизу формы две кнопки – Атрибуты и ОК. при выборе ОК – начинается подбор.

Атрибуты – расширение формы вниз. Вторая часть. Форма динамическая! В этой части формы – перечень «мягких» атрибутов для каждого класса. Напротив каждого атрибута – значение по умолчанию с выпадающим списком возможных вариантов выбора. В форму выбираются только те атрибуты тех классов, товары которых есть во входной спецификации. «Лишние» классы и атрибуты  выводиться в форме не должны. Возможно разделение по классам для простоты понимания.

Галочка к атрибуту «пересчет»

Внизу также кнопки – Доп.атрибуты и ОК. при выборе ОК – начинается подбор. 

Доп.Атрибуты – еще расширение формы вниз. Третья часть. В этой части формы – перечень «жестких» атрибутов для каждого класса. Форма также динамическая. Напротив каждого атрибута – значение по умолчанию с выпадающим списком возможных вариантов выбора.

2.6. алгоритм поиска
--------------------

Загруженная спецификация отрабатывается построчно. Каждой строке в выходной спецификации должна соответствовать строка исходной спецификации.

Для каждого артикула i-той строки исходной спецификации производится поиск записи в БД.  В случае, если артикула исходн.спецификации в БД нет – в этой строке выходной спецификации указывается – артикул в БД не найден. 

Если артикул найден, то с учетом данных найденной записи производится поиск записи аналога. Поиск производится с учетом того, что поля Класс, Тип должны полностью совпадать с параметрами записи исходной позиции, поле Производитель – с наименованием Производителя выбранном в форме запроса.

Поиск и выбор среди атрибутов:
  поиск по атрибутам производится последовательно. Т.е. первый атрибут имеет больший приоритет перед последующим. Для жестких атрибутов требуется полное совпадение значений с исходной записью, если иное не указано в форме запроса. Для мягких атрибутов совпадения ищутся исходя параметров по умолчанию, если иное не указано в форме запроса. 

После выбора позиции производится анализ атрибутов Пересчет, Взаимосвязь и Цена. Для атрибута Пересчет должен производится пересчет количества с округлением вверх до целого элемента. 

Выходная спецификация должна быть составлена в тех же ед.измерения, что и входная

2.7. сохранение результатов
---------------------------

После проведения поиска у пользователя запрашивается место для сохранения файла с результатом. Результат сохраняется в формате эксель. Столбцы – номер п/п, артикул, наименование, кол-во, ед.изм.

В выходной спецификации на каждый элемент исходной спецификации должен быть представлен аналогичный элемент в выходной спецификации (с учетом параметров «взаимосвязь» общее количество элементов может незначительно отличаться). На один элемент исходной спецификации НЕ может быть представлено несколько вариантов в выходной спецификации

Пользователь может определять формат вывода информации – указывать какие столбцы должны быть в «выходной» спецификации.

В БД должны сохраняться все произведенные подборы в формате – «исходная спецификация – выходная спецификация» – с возможностью выгрузки для администратора единой совмещенной таблицы для удобного анализа – что было на входе, что стало на выходе.